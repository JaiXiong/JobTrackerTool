name: Build and deploy .NET Core application to Web App JobTrackerAPITool with API Management Service JobTrackerAPI-JobTrackerAPIToolAPI

on:
  push:
    branches:
      - master

env:
  AZURE_WEBAPP_NAME: JobTrackerAPI
  AZURE_WEBAPP_PACKAGE_PATH: JobTracker.API.Tool\publish
  AZURE_APIM_RESOURCE_PATH: /
  AZURE_APIM_RESOURCEGROUP: JobTrackerApp
  AZURE_APIM_SERVICENAME: JobTrackerAPI
  AZURE_APIM_API_ID: JobTrackerAPITool
  AZURE_APIM_APPSERVICEURL: https://jobtrackerapi-dte7aza2fvgfgaes.centralus-01.azurewebsites.net
  SWASHBUCLE_ASPNET_CORE_CLI_PACKAGE_VERSION: 6.5.0
  API_IMPORT_SPECIFICATION_PATH: JobTracker.API.Tool\publish\swagger.json
  API_IMPORT_DLL: JobTracker.API.Tool\publish\JobTracker.API.Tool.dll
  API_IMPORT_VERSION: v1
  CONFIGURATION: Release
  DOTNET_CORE_VERSION: 9.0.x
  WORKING_DIRECTORY: JobTracker.API.Tool

jobs:
  build:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_CORE_VERSION }}
      
      - name: Update .NET workloads
        run: dotnet workload update
      
      - name: Restore
        run: dotnet restore ${{ env.WORKING_DIRECTORY }}
      
      - name: Build
        run: dotnet build ${{ env.WORKING_DIRECTORY }} --configuration ${{ env.CONFIGURATION }} --no-restore
      
      # - name: Test
      #   run: dotnet test ${{ env.WORKING_DIRECTORY }} --no-build
      
      - name: Publish
        run: dotnet publish ${{ env.WORKING_DIRECTORY }} --configuration ${{ env.CONFIGURATION }} --no-build --output ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}
      
      - name: List published files
        run: dir ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}
      
      - name: Verify DLL File
        run: |
          if (Test-Path "${{ env.API_IMPORT_DLL }}") {
            echo "DLL file exists at ${{ env.API_IMPORT_DLL }}"
          } else {
            echo "DLL file not found at ${{ env.API_IMPORT_DLL }}"
            exit 1
          }

      - name: Install Swashbuckle CLI .NET Global Tool
        run: dotnet tool install --global Swashbuckle.AspNetCore.Cli --version ${{ env.SWASHBUCLE_ASPNET_CORE_CLI_PACKAGE_VERSION }}
      
      - name: Add .NET tools to PATH
        run: echo "$HOME/.dotnet/tools" >> $GITHUB_PATH
      
      # - name: Generate Open API Specification Document
      #   run: |
      #     echo "Checking DLL path: ${{ env.API_IMPORT_DLL }}"
      #     if (dotnet swagger tofile --output "${{ env.API_IMPORT_SPECIFICATION_PATH }}" "${{ env.API_IMPORT_DLL }}" "${{ env.API_IMPORT_VERSION }}") {
      #       echo "Swagger file generated successfully"
      #     } else {
      #       echo "Failed to generate swagger file"
      #       exit 1
      #     }
      
      # - name: Verify Swagger File
      #   run: |
      #     if (Test-Path "${{ env.API_IMPORT_SPECIFICATION_PATH }}") {
      #       echo "Swagger file exists"
      #     } else {
      #       echo "Swagger file not found"
      #       exit 1
      #     }
      
      - name: Publish Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: webapp
          path: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}

  test:
    runs-on: windows-latest
    needs: build
    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: webapp
          path: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}
    
      # - name: Restore dependencies
      #   run: dotnet restore JobTracker.sln

      # - name: Run tests
      #   run: dotnet test --configuration ${{ env.CONFIGURATION }} --no-build --verbosity normal
      - name: List files in workspace
        run: ls -R

      - name: Restore unit test dependencies
        run: dotnet restore ../JobTracker.UnitTests/JobTracker.UnitTests.csproj

      - name: Restore API test dependencies
        run: dotnet restore ../JobTracker.API.ToolTests/JobTracker.API.ToolTests.csproj

      - name: Run unit tests
        run: dotnet test ../JobTracker.UnitTests/JobTracker.UnitTests.csproj --no-build

      - name: Run API tests
        run: dotnet test ../JobTracker.API.ToolTests/JobTracker.API.ToolTests.csproj --no-build

  deploy:
    runs-on: windows-latest
    needs: build
    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: webapp
          path: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}
      
      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.JobTrackerAPITool_SPN }}
      
      - name: Deploy to Azure WebApp
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          package: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}
      
      # - name: Import API into Azure API Management
      #   run: |
      #     az apim api import \
      #       --path "${{ env.AZURE_APIM_RESOURCE_PATH }}" \
      #       --resource-group "${{ env.AZURE_APIM_RESOURCEGROUP }}" \
      #       --service-name "${{ env.AZURE_APIM_SERVICENAME }}" \
      #       --api-id "${{ env.AZURE_APIM_API_ID }}" \
      #       --service-url "${{ env.AZURE_APIM_APPSERVICEURL }}" \
      #       --specification-path "${{ env.API_IMPORT_SPECIFICATION_PATH }}" \
      #       --specification-format OpenApi \
      #       --subscription-required false
      
      - name: logout
        run: az logout